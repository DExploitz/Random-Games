local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")
local plr = Players.LocalPlayer
local folder = workspace:WaitForChild("chests")

-- config
local keywords = {"chest", "crate"}
local mode = 1
local modeNames = {"Normal", "Tween", "Instant"}
local delayTime = 0.2

-- states
local enabledCollect = false
local enabledOpen = false
local running = true
local childConn = nil
local hrp

-- init char
local function setupChar(char)
	hrp = char:WaitForChild("HumanoidRootPart", 5)
end
plr.CharacterAdded:Connect(setupChar)
setupChar(plr.Character or plr.CharacterAdded:Wait())

-- utils
local function hasKeyword(str)
	str = str:lower()
	for _, word in ipairs(keywords) do
		if str:find(word) then return true end
	end
end

local function tryOpenWithTools()
	if not enabledOpen then return end
	for _, k in ipairs(keywords) do
		for _, tool in ipairs(plr.Backpack:GetChildren()) do
			if tool:IsA("Tool") and tool.Name:lower():find(k) then
				tool.Parent = plr.Character
				task.wait()
				pcall(function() tool:Activate() end)
			end
		end
		if plr.Character then
			for _, tool in ipairs(plr.Character:GetChildren()) do
				if tool:IsA("Tool") and tool.Name:lower():find(k) then
					pcall(function() tool:Activate() end)
				end
			end
		end
	end
end

local function processChest(chest)
	if not enabledCollect or not running or not hrp then return end
	if hasKeyword(chest.Name) then
		local p = chest:FindFirstChildWhichIsA("ProximityPrompt")
		if not p then return end

		if mode == 2 then
			TweenService:Create(hrp, TweenInfo.new(0.2), {CFrame = chest.CFrame}):Play()
			task.wait(0.25)
		else
			pcall(function() hrp.CFrame = chest.CFrame end)
			if mode == 1 then task.wait(0.15) end
		end
		fireproximityprompt(p)
		tryOpenWithTools()
		if mode == 1 then task.wait(delayTime)
		elseif mode == 2 then task.wait(delayTime * 0.5) end
	end
end

-- gui
local gui = Instance.new("ScreenGui", plr:WaitForChild("PlayerGui"))
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0.22,0,0.3,0)
frame.Position = UDim2.new(0.39,0,0.36,0)
frame.BackgroundColor3 = Color3.fromRGB(45,45,45)
frame.Active = true
frame.Draggable = true

local function makeBtn(text, posY)
	local btn = Instance.new("TextButton", frame)
	btn.Size = UDim2.new(1,0,0.15,0)
	btn.Position = UDim2.new(0,0,posY,0)
	btn.BackgroundColor3 = Color3.fromRGB(100,0,0)
	btn.TextColor3 = Color3.new(1,1,1)
	btn.Font = Enum.Font.SourceSansBold
	btn.TextScaled = true
	btn.Text = text
	return btn
end

local dragBar = Instance.new("Frame", frame)
dragBar.Size = UDim2.new(1,0,0.15,0)
dragBar.BackgroundColor3 = Color3.fromRGB(30,30,30)
local credit = Instance.new("TextLabel", dragBar)
credit.Size = UDim2.new(1,0,1,0)
credit.BackgroundTransparency = 1
credit.Text = "By : @dexploitz on YT"
credit.TextColor3 = Color3.new(1,1,1)
credit.TextStrokeTransparency = 0
credit.Font = Enum.Font.SourceSansBold
credit.TextScaled = true

local modeBtn = makeBtn("Mode: "..modeNames[mode], 0.17)
local collectBtn = makeBtn("Enable Auto Collect", 0.34)
local openBtn = makeBtn("Enable Auto Open", 0.51)
local delayBox = Instance.new("TextBox", frame)
delayBox.Size = UDim2.new(1,0,0.15,0)
delayBox.Position = UDim2.new(0,0,0.68,0)
delayBox.BackgroundColor3 = Color3.fromRGB(50,50,50)
delayBox.TextColor3 = Color3.new(1,1,1)
delayBox.Font = Enum.Font.SourceSans
delayBox.TextScaled = true
delayBox.PlaceholderText = "Delay (sec)..."
delayBox.Text = tostring(delayTime)

local destroyBtn = makeBtn("Destroy UI", 0.85)
destroyBtn.BackgroundColor3 = Color3.fromRGB(120, 0, 0)

-- button logic
modeBtn.MouseButton1Click:Connect(function()
	mode = mode % #modeNames + 1
	modeBtn.Text = "Mode: "..modeNames[mode]
end)

collectBtn.MouseButton1Click:Connect(function()
	enabledCollect = not enabledCollect
	collectBtn.Text = enabledCollect and "Disable Auto Collect" or "Enable Auto Collect"
	collectBtn.BackgroundColor3 = enabledCollect and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(100,0,0)

	if enabledCollect then
		if not hrp or not hrp.Parent then setupChar(plr.Character) end
		hrp.Anchored = true

		-- initial run
		for _, chest in ipairs(folder:GetChildren()) do
			task.spawn(function() processChest(chest) end)
		end

		childConn = folder.ChildAdded:Connect(function(obj)
			task.spawn(function() processChest(obj) end)
		end)
	else
		if childConn then childConn:Disconnect() childConn = nil end
		if hrp then hrp.Anchored = false end
	end
end)

openBtn.MouseButton1Click:Connect(function()
	enabledOpen = not enabledOpen
	openBtn.Text = enabledOpen and "Disable Auto Open" or "Enable Auto Open"
	openBtn.BackgroundColor3 = enabledOpen and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(100,0,0)
end)

delayBox.FocusLost:Connect(function()
	local v = tonumber(delayBox.Text)
	if v and v >= 0 then delayTime = v else delayBox.Text = tostring(delayTime) end
end)

destroyBtn.MouseButton1Click:Connect(function()
	running = false
	if childConn then childConn:Disconnect() end
	if hrp then hrp.Anchored = false end
	gui:Destroy()
end)

-- notification
local bf = Instance.new("BindableFunction")
function bf.OnInvoke(choice)
	if choice == "Yes" then
		pcall(function() toclipboard("https://discord.gg/T7NjmUgZcm") end)
		StarterGui:SetCore("SendNotification", {
			Title="Copied!";
			Text="Copied discord invite link! Paste it in browser";
			Duration=5;
		})
	end
end
StarterGui:SetCore("SendNotification", {
	Title="Thanks for using my script!";
	Text="Join my discord server please";
	Duration=8;
	Button1="Yes"; Button2="No";
	Callback=bf;
})
